plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenCentral()
}

def selenideVersion = "5.20.1",
    junitVersion = "5.7.1",
    javaFakerVersion = "1.0.2",
    assertjCoreVersion = "3.19.0",
    allureVersion = "2.13.8",
    aspectjweaverVersion = "1.9.6",
    ownerVersion = "1.0.12",
    operaDriverVersion = "1.5"

allure {
    version = allureVersion
    autoconfigure = true
    aspectjweaver = true
    configuration = "testImplementation"
    useJUnit5 {
        version = allureVersion
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:$aspectjweaverVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "com.opera:operadriver:$operaDriverVersion",
            "org.assertj:assertj-core:$assertjCoreVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
    maxParallelForks = 1

    systemProperties = [
            'junit.jupiter.execution.parallel.enabled': 'true',
            'junit.jupiter.execution.parallel.mode.default': 'concurrent',
//            'junit.jupiter.execution.parallel.mode.default': 'same_thread',
            'junit.jupiter.execution.parallel.mode.classes.default': 'concurrent',
//            'junit.jupiter.execution.parallel.mode.classes.default': 'same_thread',
            'junit.jupiter.execution.parallel.config.strategy': 'fixed',
            'junit.jupiter.execution.parallel.config.fixed.parallelism': '3'
    ]
}